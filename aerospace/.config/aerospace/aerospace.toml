# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget borders active_color=0xff69e3f2 inactive_color=0xff494d64 width=6.0'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = "move-mouse window-lazy-center"

[workspace-to-monitor-force-assignment]
P = '^built-in retina display$'  # Case insensitive regex match

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-name-regex-substring = 'Cursor'
if.window-title-regex-substring = 'Cursor'
run = "move-node-to-workspace X"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run =  "move-node-to-workspace W"

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = "move-node-to-workspace P"

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.usebruno.app'
run = "move-node-to-workspace I"

[[on-window-detected]]
if.app-id = 'org.mozilla.thunderbird'
run = "move-node-to-workspace M"


# make certain windows always floating
[[on-window-detected]]
if.app-id = 'info.filesmanager.Files-Lite'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'cc.ffitch.shottr'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.raspberrypi.imagingutility'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'layout floating'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-shift-ctrl-slash = 'layout tiles horizontal vertical'
alt-shift-ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-ctrl-h = 'focus left'
alt-shift-ctrl-j = 'focus down'
alt-shift-ctrl-k = 'focus up'
alt-shift-ctrl-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-ctrl-cmd-h = 'move left'
alt-shift-ctrl-cmd-j = 'move down'
alt-shift-ctrl-cmd-k = 'move up'
alt-shift-ctrl-cmd-l = 'move right'

alt-shift-ctrl-z = 'fullscreen' # Z for [Z]oom

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-shift-ctrl-c = 'workspace C' # C For [C]ode
alt-shift-ctrl-d = 'workspace D' # D for [D]iscord
alt-shift-ctrl-w = 'workspace W' # W for [W]eb Brower
alt-shift-ctrl-p = 'workspace P' # P for Music [P]layer
alt-shift-ctrl-a = 'workspace A' # A for [A] Google chrome
alt-shift-ctrl-i = 'workspace I' # I for AP[I] testing
alt-shift-ctrl-m = 'workspace M' # M for [M]essaging
alt-shift-ctrl-x = 'workspace X'
alt-shift-ctrl-1 = 'workspace 1'
alt-shift-ctrl-2 = 'workspace 2'
alt-shift-ctrl-3 = 'workspace 3'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-ctrl-cmd-c = 'move-node-to-workspace C' # C For [C]ode
alt-shift-ctrl-cmd-d = 'move-node-to-workspace D' # D for [D]iscord
alt-shift-ctrl-cmd-w = 'move-node-to-workspace W' # W for [W]eb Brower
alt-shift-ctrl-cmd-p = 'move-node-to-workspace P' # P for Music [P]layer
alt-shift-ctrl-cmd-a = 'move-node-to-workspace A' # A for [A] Google chrome
alt-shift-ctrl-cmd-i = 'move-node-to-workspace I' # I for AP[I] testing
alt-shift-ctrl-cmd-m = 'move-node-to-workspace M' # M for [M]essaging
alt-shift-ctrl-cmd-x = 'move-node-to-workspace X'
alt-shift-ctrl-cmd-1 = 'move-node-to-workspace 1'
alt-shift-ctrl-cmd-2 = 'move-node-to-workspace 2'
alt-shift-ctrl-cmd-3 = 'move-node-to-workspace 3'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-shift-ctrl-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-ctrl-cmd-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-ctrl-cmd-semicolon = 'mode service'
alt-shift-ctrl-cmd-r = 'mode resize'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-ctrl-semicolon = 'layout floating tiling'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.resize.binding]
esc = ['mode main']
# See: https://nikitabobko.github.io/AeroSpace/commands#resize
h = 'resize smart -50'
l = 'resize smart +50'

[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
# f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']
