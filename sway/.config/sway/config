# https://github.com/swaywm/sway/wiki

### Autotiling
exec $HOME/.cargo/bin/autotiling-rs

### Autostart
exec nm-applet --indicator
exec libinput-gestures-setup autostart start
exec blueman-applet
set $latitude 56.6
set $longitude 16.3
exec wlsunset -l $latitude -L $longitude
# WCP - Wayland Control Panel 'https://github.com/milgra/wcp'
# exec rm -f /tmp/wcp && mkfifo /tmp/wcp && tail -f /tmp/wcp | wcp -a rt -m 5
### clipboard
exec wl-paste -t text --watch clipman store --no-persist
### swayr daemon
set $swayR $HOME/.cargo/bin/swayr
exec $HOME/.cargo/bin/swayrd

### Sway Notification Center
# Notification Daemon
exec swaync

### Clamshell Mode
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
# prevent laptop lid from waking up on sway reload
exec_always $HOME/.config/sway/laptop-lid-fix.sh

# script to find path to cpu temp and create a symlink for waybar
exec_always $HOME/.config/waybar/find-hwmon.sh

### use xwayland 
xwayland enable

### set dark theme
exec {
    gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
    gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'
    gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'
}

### Variables

set $mod Mod4
# set $mod Mod1 # Alt

workspace_auto_back_and_forth yes
show_marks yes

set $left h
set $down j
set $up k
set $right l

set $term kitty
set $browser brave-browser
set $music spotify
set $files nautilus
set $email thunderbird
set $slack slack --enable-features=WebRTCPipeWireCapturer
set $webcord webcord --enable-features=WebRTCPipeWireCapturer --enable-features=UseOzonePlatform --ozone-platform=wayland
set $pavucontrol pavucontrol

set $menu wofi --width 600 --height 300 --gtk-dark --show drun --insensitive --allow-images --style $HOME/.config/wofi/style.css --prompt=""
# set $record wf-recorder --audio --file=$HOME/Video/recordings/recording_with_audio.mp4


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg $HOME/walls/dball-8k.png fill
# feh --bg-fill --randomize ~/Pictures/wallpapers/* &

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#   output HDMI-A-1 resolution 1920x1080@60Hz position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output "LG Electronics LG HDR WQHD 201NTPCHW608" resolution 3440x1440@100Hz position 0,0
output eDP-1 scale 1.5
# output "Acer Technologies KG251Q T8ZEE0048532" resolution 1920x1080@144Hz position 1920,0
# output "Ancor Communications Inc VS278 C8LMQS093350" resolution 1920x1080@60Hz position 0,0

# sticky applications to certain workspace number
# spotify currently doesn't work with this D:
assign [class="Spotify" instance="spotify" title="Spotify"] 9
assign [app_id="WebCord" class="WebCord" title="WebCord" instance="WebCord"] 8
assign [class="Slack"] 8
assign [class="Signal"] 8
assign [class="thunderbird"] 7

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
        timeout 600 'swaylock --grace 5 -f -c 000000 --indicator --image $HOME/walls/dball.png --effect-blur 7x5' \
        timeout 1200 'systemctl suspend' \
        resume 'swaymsg "output * dpms on"' \
        before-sleep 'swaylock -f -c 000000 --indicator --image $HOME/walls/dball.png --effect-blur 7x5' \
#
# lock your computer after 10 mins,
# This will turn off your displays after 15 mins,
# and suspend your computer after 20 mins of inactivity.
# Will turn your screens back on when resumed.
# It will also lock your screen before your computer goes to sleep.

### Input configuration

input "type:keyboard" {
    xkb_layout se
    xkb_variant us
    xkb_options caps:escape
    repeat_delay 300
    repeat_rate 80
}

input "type:touchpad" {
    natural_scroll enabled
    dwt enabled
    middle_emulation disabled
    click_method clickfinger
    tap enabled
    tap_button_map lrm
}

input "type:pointer" {
    # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    accel_profile "flat"
    # set mouse sensitivity (between -1 and 1)
    pointer_accel 0.6
}

# You can get the names of your inputs by running:
    # swaymsg -t get_inputs
# You can list all running programs titles, classnames, etc..
    # swaymsg -t get_tree
# Or search for a specific program with grep:
    # swaymsg -t get_tree | grep "Insomnia"

### special window rules
# set windows to always be floating
for_window [title="Volume Control"] floating enable, resize set 900 600
for_window [title="Bluetooth Devices"] floating enable, resize set 900 600
for_window [title="Calendar"] floating enable, resize set 900 600
for_window [title="Clocks"] floating enable
for_window [app_id="Nautilus"] floating enable, resize 900 600
for_window [title="zoom"] floating enable, resize set 1600 900
for_window [title="Zoom"] floating enable, resize set 1600 900
for_window [title="Zoom Cloud Meetings"] floating enable, resize set 1600 900
for_window [title="System Monitor"] floating enable, resize set 900 600
for_window [title="btop"] floating enable, resize set 1600 900
for_window [class="1Password"] floating enable, resize set 1600 900
for_window [app_id="com.obsproject.Studio"] floating enable, resize set 1600 900

# float firefox bookmark, etc... window
for_window [title="Library"] floating enable
for_window [title="Library"] resize set 1400 900

# move to scratchpad on spawn
for_window [class="Insomnia"] move scratchpad
for_window [title="Scratchpad"] move scratchpad


### Key bindings

    # exec programs
    bindsym $mod+w exec $browser
    bindsym $mod+f exec $files
    # bindsym $mod+e exec $email
    bindsym $mod+v exec $pavucontrol

    ## control Spotify music player (playerctl --player=spotify)
    bindsym $mod+Control+Shift+p exec playerctl --player=spotify play-pause
    bindsym $mod+Control+Shift+n exec playerctl --player=spotify next
    bindsym $mod+Control+Shift+Up exec playerctl --player=spotify volume "0.05+"
    bindsym $mod+Control+Shift+Down exec playerctl --player=spotify volume "0.05-"
    # Arrow keys
    bindsym $mod+Left exec playerctl previous
    bindsym $mod+Right exec playerctl next
    # volume
    bindsym $mod+Up exec --no-startup-id pactl set-sink-volume 0 +5%
    bindsym $mod+Down exec --no-startup-id pactl set-sink-volume 0 -5%
    # clipman (clipboard manager)
    bindsym $mod+c exec clipman pick --tool wofi -T'--prompt="Clipboard history" -i'

    # Toggle control center (Sway Notification Center)
    bindsym $mod+Shift+n exec swaync-client -t -sw


#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    # Start a terminal in the scratchpad
    bindsym $mod+Ctrl+minus exec $term -T "Scratchpad"

    # Kill focused window
    bindsym $mod+q kill
    # Open wofi showing all windows and force kill picked window
    bindsym $mod+Shift+q exec $swayR quit-window --kill

    ## swayr commands
    # Open wofi showing all windows and switch to choosen window
    bindsym $mod+Shift+Tab exec $swayR switch-window
    bindsym $mod+s exec $swayR switch-window
    bindsym $mod+Shift+s exec $swayR steal-window
    bindsym $mod+u exec $swayR switch-to-urgent-or-lru-window

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Logout menu
    bindsym $mod+Shift+e exec $HOME/.config/sway/scripts/dmenu-logout/logout-menu.sh

#
# Moving around:
#

    # Toggle fullscreen mode.
    bindsym $mod+m fullscreen toggle

    # Toggle monocle mode.
    # bindsym $mod+f nop i3ipc_monocle_toggle

    # Toggle workspace.
    bindsym $mod+Tab workspace back_and_forth

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Swap Windows
    bindsym $mod+Shift+$left mark --add "_swap", focus left, swap container with mark "_swap", focus left, unmark "_swap"
    bindsym $mod+Shift+$down mark --add "_swap", focus down, swap container with mark "_swap", focus down, unmark "_swap"
    bindsym $mod+Shift+$up mark --add "_swap", focus up, swap container with mark "_swap", focus up, unmark "_swap"
    bindsym $mod+Shift+$right mark --add "_swap", focus right, swap container with mark "_swap", focus right, unmark "_swap"

    # Move workspace to different output/monitor
    bindsym $mod+Control+Shift+$right move workspace to output right
    bindsym $mod+Control+Shift+$left move workspace to output left
    bindsym $mod+Control+Shift+$down move workspace to output down
    bindsym $mod+Control+Shift+$up move workspace to output up

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Brightness controls
    bindsym XF86MonBrightnessUp exec brightnessctl -q set +5% # increase screen brightness
    bindsym XF86MonBrightnessDown exec brightnessctl -q set 5%- # decrease screen brightnes

    # Pulse Audio controls
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+a workspace Alpha
    bindsym $mod+b workspace Beta
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+a move container to workspace Alpha
    bindsym $mod+Shift+b move container to workspace Beta
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv

    ### Switch the current container between different layout styles
    # Toggle between tabbed and tiled layout using "swayr"
    bindsym $mod+t exec $swayR toggle-tab-shuffle-tile-workspace exclude-floating || $swayR nop
    # bindsym $mod+s layout stacking
    # bindsym $mod+t layout tabbed
    # bindsym $mod+t layout toggle split

    # Make the current focus fullscreen
    # bindsym $mod+f fullscreen

    # screenshot
    bindsym $mod+Ctrl+p exec grim -g "$(slurp)" - | swappy -f - 

    # Toggle the current focused window between tiling and floating mode
    bindsym $mod+Space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+Space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # resize 2 windows 50%/50% and then set focused window to 70% and other to 30% ish size
    # (On a 1440p ultrawide monitor)
    bindsym g floating toggle, floating toggle, resize grow width 570px
    # set 2 window split 50/50
    bindsym e floating toggle, floating toggle
    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### No titlebars
# Borders
default_border none
default_border pixel 2
for_window [title="^.*"] title_format " "
#default_border normal 0
# default_floating_border normal 0
# class                 border  backgr. text    indicator child_border
client.focused          #8aadf4 #24273a #ffffff #8aadf4   #8aadf4
client.focused_inactive #333333 #5f676a #ffffff #484e50   #484e50
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


### Gaps

gaps inner 5
gaps outer 10
gaps horizontal 0 
gaps vertical 0
gaps top 5
gaps right 5
gaps bottom 5
gaps left 5

### Opacity
# set $opacity 0.97
# for_window [class="kitty"] opacity $opacity
# for_window [class="nvim"] opacity 1
# for_window [app_id="nvim"] opacity .5

### Status Bar:

bar { 
     swaybar_command waybar
}

# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

seat * hide_cursor when-typing enable
# seat * hide_cursor 8000

include /etc/sway/config.d/*
